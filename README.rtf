README file

There is an interface called MemoryOperations<K> which includes the methods: 
	List<K> getDeck();

	  void startGame(List<K> cards, int rows, int flipped);

	  void guessCard(int rowNumber, int cardIndex);

	  boolean isGameOver();

	  String getGameState();
The class that implements the interface is called MemoryModel which has the following fields:
	protected boolean gameStarted;
	protected ArrayList<ArrayList<Card>> board;
	protected List<Card> cards;
	protected List<Card> correctCards;
	protected List<Card> guessed;
	protected List<Card> notGuessed;
	protected int numOfRows;
It keeps track of the state of the game by updating the game board and game states according to the user inputs. The user should provide a deck of valid cards, an appropriate number of rows they want in the game, as well as an appropriate number of cards being flipped. The model will set up the board accordingly and manage the game state.

There is a Card class, which has the following fields:
	private final int value;
	private final int suit;
	private final CardColor color;
	private boolean faceUp; which represents whether the card is currently faced up or down in the game
	private int xPos; which represents the x-coordinate of top left corner of the card in the game board
	private int yPos; which represents the y-coordinate of top left corner of the card in the game board
The card value ranges from 1 to 13, which represents the 13 types of value in a card deck, 10 representing Jack, 11 representing Queen, and 13 representing King. It has 4 suits - clubs, diamonds, hearts, or spades
There is an enum CardColor which consists of BLACK and RED
